@public var ref = fn @byref a => __ref(a)
@public var deref = fn a => __deref(a)
@public var op== = fn a, b => __eq(a, b)
@public var op< = fn a, b => __lt(a, b)
@public var op+ = fn a, b => __plus(a, b)
@public var op* = fn a, b => __multiply(a, b)
@public var inc = fn a, b => __plus(a, 1)
@public var and = fn a, b => __and(a, b)
@public var or = fn a, b => __or(a, b)
@public var first = fn a => __at(a, 0)
@public var op++ = fn a, b => [a, b]
@public var at = fn a, ix => __at(a, ix)
@public var count = fn a => __count(a)
@public --var add = fn @byref a, item => __add(a, item)
@public var env = fn a => __env(a)
@public var print = fn a => __print(a)
@public var typeof = fn a => __typeof(a)

@public var Void = __Void
@public var Any = __Any
@public var Bool = __Bool
@public var Int = __Int
@public var Char = __Char
@public var Arr = __Arr
@public var Fn = __Fn
@public var Class = __Class